#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <unistd.h>

#define SERVER_PORT 8080
#define MAX_PENDING 5
#define MAX_LINE 256

int main() {
    struct sockaddr_in sin;
    char buf[MAX_LINE];
    int len;
    int s, new_s;

    // Build address data structure
    bzero((char *)&sin, sizeof(sin));
    sin.sin_family = AF_INET;
    sin.sin_addr.s_addr = INADDR_ANY;
    sin.sin_port = htons(SERVER_PORT);

    // Setup passive open
    if ((s = socket(PF_INET, SOCK_STREAM, 0)) < 0) {
        perror("socket");
        exit(1);
    }
    printf("Server socket created successfully.\n");

    if ((bind(s, (struct sockaddr *)&sin, sizeof(sin))) < 0) {
        perror("bind");
        exit(1);
    }
    printf("Bind successful.\n");

    listen(s, MAX_PENDING);
    printf("Server is listening...\n");

    // Main loop: wait for connection, then receive and send text
    while (1) {
        if ((new_s = accept(s, (struct sockaddr *)&sin, &len)) < 0) {
            perror("accept");
            exit(1);
        }

        while (1) {
            // Receive message from client
            len = recv(new_s, buf, sizeof(buf), 0);
            if (len <= 0) break;
            printf("Client sends the msg: %s", buf);

            // Send message to client
            printf("Chat with client: ");
            fgets(buf, sizeof(buf), stdin);
            send(new_s, buf, strlen(buf) + 1, 0);
        }

        close(new_s);
    }

    close(s);
    return 0;
}